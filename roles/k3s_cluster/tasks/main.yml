# This ansible will set up a K3s cluster with server and agent nodes,
# ensuring prerequisites are met and configurations are applied.
# As output, a fact `k3s_kubeconfig_path` will be set to the local kubeconfig file path.
# You must ensure the required secrets are set before running this playbook.
- name: Fail if K3S_TOKEN is not set
  ansible.builtin.fail:
    msg: "The environment variable K3S_TOKEN must be set before running this playbook."
  when: k3s_token is not defined or k3s_token == ""

- name: Fail if K3S_LOCAL_KUBECONFIG is not set
  ansible.builtin.fail:
    msg: "The environment variable K3S_LOCAL_KUBECONFIG must be set before running this playbook."
  when: k3s_local_kubeconfig is not defined or k3s_local_kubeconfig == ""

- name: Set the needed secrets facts for all hosts
  ansible.builtin.set_fact:
    token: "{{ k3s_token }}"

# Ensure inotify max_user_watches is set
- name: Ensure inotify max_user_watches is set
  ansible.posix.sysctl:
    name: fs.inotify.max_user_watches
    value: '524288'
    state: present
    reload: true
  when: "'k3s_cluster' in group_names"

- name: Ensure inotify max_user_instances is set
  ansible.posix.sysctl:
    name: fs.inotify.max_user_instances
    value: '8192'
    state: present
    reload: true
  when: "'k3s_cluster' in group_names"

# Common prerequisites for all k3s_cluster hosts
- name: Run prereq role on all k3s_cluster hosts
  ansible.builtin.include_role:
    name: k3s.orchestration.prereq
  when: "'k3s_cluster' in group_names"

# Setup server nodes
- name: Setup K3s Server
  ansible.builtin.include_role:
    name: k3s.orchestration.k3s_server
  when: "'server' in group_names"

# Copy kubeconfig to local machine and set kubeconfig path fact
- name: Fetch kubeconfig to control node
  ansible.builtin.fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "{{ k3s_local_kubeconfig }}"
    flat: true
  when: "'server' in group_names"

- name: Set kubeconfig path fact
  ansible.builtin.set_fact:
    k3s_kubeconfig_path: "{{ k3s_local_kubeconfig }}"
  when: "'server' in group_names"



# Setup agent nodes
- name: Ensure k3s-agent.service.env exists
  ansible.builtin.file:
    path: "{{ systemd_dir }}/k3s-agent.service.env"
    state: touch
    owner: root
    group: root
    mode: "0644"
  vars:
    systemd_dir: "/etc/systemd/system"
  when: "'agent' in group_names"

- name: Setup K3s Agent
  ansible.builtin.include_role:
    name: k3s.orchestration.k3s_agent
  when: "'agent' in group_names"
